#!/usr/bin/env node

const fs = require('fs');
const exec = require('child_process').execSync;

const REQUIRED_BRANCHES = ['master', 'develop', 'test', 'temp'];
const BRANCH_PATTERN = /^S-[0-9]{1,4}/;
console.log(122);
const branchName = exec('git rev-parse --abbrev-ref HEAD', { encoding: 'utf-8' }).split('\n')[0].trim();
const messageFile = process.env.HUSKY_GIT_PARAMS;
const message = fs.readFileSync(messageFile, 'utf8').trim();

/**
 * exit process with status 0 (OK) if current branch one of REQUIRED_BRANCHES
 * @param currentBranch
 * @returns {function(*): undefined}
 */
const exitForRequiredBranches = currentBranch => branch => branch === currentBranch ? process.exit(0) : undefined;
REQUIRED_BRANCHES.forEach(exitForRequiredBranches(branchName));

/**
 * get standartize tag for branch and commit
 * @param str
 * @returns {Promise<any> | Promise<Response> | RegExpMatchArray | * | string}
 */
const getJiraTag = str => {
  const matched = str.match(BRANCH_PATTERN);
  return matched && matched[0];
};
const JIRA_TAG = getJiraTag(branchName);

/**
 * check if commit includes required tag
 * @param str
 * @returns {Promise<any> | Promise<Response> | RegExpMatchArray | *}
 */
const commitIncludeBranchName = str => str.match(BRANCH_PATTERN);


if(!JIRA_TAG) {
  console.log('Commit hook rejected: Branch name must be "SPS-[JIRA Number]_[Message]"');
  process.exit(1);
}

if(!commitIncludeBranchName(message)) {
  const messageLines = message.split('\n');
  messageLines[0] = `${JIRA_TAG} ${message}`;
  fs.writeFileSync(messageFile, messageLines.join('\n'), { encoding: 'utf-8' });
  console.log(`New message title: ${messageLines[0]}`);
}
process.exit(0);
